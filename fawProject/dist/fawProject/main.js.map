{"version":3,"sources":["./src/app/shared/rest-api.service.ts","./src/environments/environment.ts","./src/app/fish-create/fish-create.component.ts","./src/app/fish-create/fish-create.component.html","./src/app/fish-list/fish-list.component.html","./src/app/fish-list/fish-list.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/fish-edit/fish-edit.component.ts","./src/app/fish-edit/fish-edit.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport { Fish } from './fish';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestApiService {\n\n  apiURL = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/Json'\n    })\n  }\n\n  getFishes(): Observable<Fish> {\n    return this.http.get<Fish>(this.apiURL + '/fishes')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n  \n  getFish(id: any): Observable<Fish> {\n    return this.http.get<Fish>(this.apiURL + '/fishes/' + id)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  } \n  \n  createFish(fish: any): Observable<Fish> {\n    return this.http.post<Fish>(this.apiURL + '/fishes/', JSON.stringify(fish), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  } \n  \n  updateFish(id: any, fish: any): Observable<Fish> {\n    return this.http.put<Fish>(this.apiURL + '/fishes/', JSON.stringify(fish), this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  deleteFish(id: number){\n    return this.http.delete<Fish>(this.apiURL + '/fishes/' + id, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  handleError(error: any) {\n    let errorMessage = '';\n    if(error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(errorMessage);\n }\n}\n\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from '../shared/rest-api.service';\n\n@Component({\n  selector: 'app-fish-create',\n  templateUrl: './fish-create.component.html',\n  styleUrls: ['./fish-create.component.css']\n})\nexport class FishCreateComponent implements OnInit {\n\n  @Input() fishDetails = {fishLength: 0, sex: '', species: ''}\n\n  constructor(\n    public restApi: RestApiService,\n    public router: Router\n  ) { }\n\n  ngOnInit() {\n  }\n\n  addFish() {\n    this.restApi.createFish(this.fishDetails).subscribe((data: {}) => {\n      this.router.navigate(['/fish-list'])\n    })\n  }\n  \n\n}\n","<div class=\"container custom-container\">\n    <div class=\"col-md-12\">\n      <h3 class=\"mb-3 text-center\">Create Fish</h3>\n  \n      <div class=\"form-group\">\n        <label >Length:</label>\n        <input type=\"number\" [(ngModel)]=\"fishDetails.fishLength\" class=\"form-control\" placeholder=\"Length\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"sex\">Sex:</label>\n        <select id=\"sex\" name=\"sex\" [(ngModel)]=\"fishDetails.sex\" class=\"form-control\">\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n        </select>\n        <!--<input type=\"text\" [(ngModel)]=\"fishDetails.sex\" class=\"form-control\" placeholder=\"Sex\"> -->\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"species\">Species:</label>\n        <select id=\"species\" name=\"species\" [(ngModel)]=\"fishDetails.species\" class=\"form-control\">\n          <option value=\"Black Rockfish\">Black Rockfish</option>\n          <option value=\"Chinook Salmon\">Chinook Salmon</option>\n          <option value=\"Dungeness Crab\">Dungeness Crab</option>\n        </select>\n        <!--<input type=\"text\" [(ngModel)]=\"fishDetails.species\" class=\"form-control\" placeholder=\"Species\">-->\n      </div>\n  \n      <div class=\"form-group\">\n        <button class=\"btn btn-success btn-lg btn-block\" (click)=\"addFish()\">Create Fish</button>\n      </div>\n  \n    </div>\n  </div>\n\n  \n","<div class=\"container custom-container-2\">\n\n    <!-- Show it when there is no fish -->\n    <div class=\"no-data text-center\" *ngIf=\"Fishes.length == 0\">\n      <p>There is no fish added yet!</p>\n      <button class=\"btn btn-outline-primary\" routerLink=\"/create-fish\">Add Fish</button>\n    </div>\n  \n    <!-- Fish list table, it hides when there is no fish -->\n    <div *ngIf=\"Fishes.length !== 0\">\n      <h3 class=\"mb-3 text-center\">Fish List</h3>\n  \n      <div class=\"col-md-12\">\n        <table class=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Id</th>\n              <th scope=\"col\">Length</th>\n              <th scope=\"col\">Sex</th>\n              <th scope=\"col\">Species</th>\n              <th scope=\"col\">Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let fish of Fishes\">\n              <td>{{fish.id}}</td>\n              <td>{{fish.fishLength}}</td>\n              <td>{{fish.sex}}</td>\n              <td>{{fish.species}}</td>\n              <td>\n                <div class = \"btn-toolbar\">\n                  <span class=\"btn btn-outline-primary edit\" routerLink=\"/fish-edit/{{fish.id}}\">Edit</span>\n                  <span class=\"btn btn-outline-primary delete\" (click)=\"deleteFish(fish.id)\">Delete</span>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n  \n    </div>\n  \n  </div>\n\n  ","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from '../shared/rest-api.service';\n\n@Component({\n  selector: 'app-fish-list',\n  templateUrl: './fish-list.component.html',\n  styleUrls: ['./fish-list.component.css']\n})\nexport class FishListComponent implements OnInit {\n\n  Fishes: any = [];\n\n  constructor(\n    public restApi: RestApiService\n  ) { }\n\n  ngOnInit(){\n    this.loadFishes();\n  }\n\n  loadFishes() {\n    return this.restApi.getFishes().subscribe((data: {}) => {\n      this.Fishes = data;\n    })\n  }\n\n  deleteFish(id: number) {\n    if (window.confirm('Are you sure?')) {\n      this.restApi.deleteFish(id).subscribe(data => {\n        this.loadFishes()\n      })\n    }\n  }\n\n  \n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'fawProject';\n}\n","<!--<app-fish-list></app-fish-list>\n<app-fish-create></app-fish-create>\n<app-fish-edit></app-fish-edit> -->\n\n<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n    <h5 class=\"my-0 mr-md-auto font-weight-normal\">Catch Table</h5>\n    <nav class=\"my-2 my-md-0 mr-md-3\">\n      <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/create-fish\">Add New Catch</a>\n    </nav>\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/fish-list\">Fish List</a>\n  </div>\n  \n  <router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FishCreateComponent } from './fish-create/fish-create.component';\nimport { FishEditComponent } from './fish-edit/fish-edit.component';\nimport { FishListComponent } from './fish-list/fish-list.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FishCreateComponent,\n    FishEditComponent,\n    FishListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-fish-details',\n  templateUrl: './fish-edit.component.html',\n  styleUrls: ['./fish-edit.component.css']\n})\nexport class FishEditComponent implements OnInit {\n  id = this.actRoute.snapshot.params[('id')];\n  fishData: any = {};\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) { }\n\n  ngOnInit() {\n    this.restApi.getFish(this.id).subscribe((data: {}) => {\n      this.fishData = data;\n    })\n  }\n\n  updateFish() {\n    if(window.confirm('Are you sure?')){\n      this.restApi.updateFish(this.id, this.fishData).subscribe(data => {\n        this.router.navigate(['/fish-list'])\n      })\n    }\n  }\n\n}\n","<div class=\"container custom-container\">\n    <div class=\"col-md-12\">\n      \n      <h3 class=\"mb-3 text-center\">Update Fish</h3>\n  \n      <div class=\"form-group\">\n        <label >Length:</label>\n        <input type=\"number\" [(ngModel)]=\"fishData.fishLength\" class=\"form-control\" placeholder=\"Length\">\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"sex\">Sex:</label>\n        <select id=\"sex\" name=\"sex\" [(ngModel)]=\"fishData.sex\" class=\"form-control\">\n          <option value=\"Male\">Male</option>\n          <option value=\"Female\">Female</option>\n        </select>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"species\">Species:</label>\n        <select id=\"species\" name=\"species\" [(ngModel)]=\"fishData.species\" class=\"form-control\">\n          <option value=\"Black Rockfish\">Black Rockfish</option>\n          <option value=\"Chinook Salmon\">Chinook Salmon</option>\n          <option value=\"Dungeness Crab\">Dungeness Crab</option>\n        </select>\n      </div>\n  \n      <div class=\"form-group\">\n        <button class=\"btn btn-success btn-lg btn-block\" (click)=\"updateFish()\">Update Fish</button>\n      </div>\n      \n    </div>\n  </div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FishCreateComponent } from './fish-create/fish-create.component';\nimport { FishEditComponent } from './fish-edit/fish-edit.component';\nimport { FishListComponent } from './fish-list/fish-list.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'create-fish' },\n  { path: 'create-fish', component: FishCreateComponent },\n  { path: 'fish-list', component: FishListComponent },\n  { path: 'fish-edit/:id', component: FishEditComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}